<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.coin.mapper.TContestMapper">
  <resultMap id="BaseResultMap" type="com.coin.entity.TContest">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="contest_type" jdbcType="VARCHAR" property="contestType" />
    <result column="contest_name" jdbcType="VARCHAR" property="contestName" />
    <result column="contest_date" jdbcType="TIMESTAMP" property="contestDate" />
    <result column="team_first" jdbcType="VARCHAR" property="teamFirst" />
    <result column="team_first_pic" jdbcType="VARCHAR" property="teamFirstPic" />
    <result column="team_second" jdbcType="VARCHAR" property="teamSecond" />
    <result column="team_second_pic" jdbcType="VARCHAR" property="teamSecondPic" />
    <result column="is_hot" jdbcType="INTEGER" property="isHot" />
    <result column="is_recommend" jdbcType="INTEGER" property="isRecommend" />
    <result column="team_first_score" jdbcType="INTEGER" property="teamFirstScore" />
    <result column="team_second_score" jdbcType="INTEGER" property="teamSecondScore" />
    <result column="is_publish" jdbcType="INTEGER" property="isPublish" />
    <result column="publish_date" jdbcType="TIMESTAMP" property="publishDate" />
    <result column="show_date_start" jdbcType="TIMESTAMP" property="showDateStart" />
    <result column="show_date_end" jdbcType="TIMESTAMP" property="showDateEnd" />
    <result column="status" jdbcType="INTEGER" property="status" />
    <result column="sort_num" jdbcType="INTEGER" property="sortNum" />
    <result column="create_user" jdbcType="VARCHAR" property="createUser" />
    <result column="create_date" jdbcType="TIMESTAMP" property="createDate" />
    <result column="update_user" jdbcType="VARCHAR" property="updateUser" />
    <result column="update_date" jdbcType="TIMESTAMP" property="updateDate" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    id, contest_type, contest_name, contest_date, team_first, team_first_pic, team_second, 
    team_second_pic, is_hot, is_recommend, team_first_score, team_second_score, is_publish, 
    publish_date, show_date_start, show_date_end, status, sort_num, create_user, create_date, 
    update_user, update_date
  </sql>
  <select id="selectByExample" parameterType="com.coin.entity.TContestExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from t_contest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from t_contest
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from t_contest
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.coin.entity.TContestExample">
    delete from t_contest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.coin.entity.TContest">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_contest (contest_type, contest_name, contest_date, 
      team_first, team_first_pic, team_second, 
      team_second_pic, is_hot, is_recommend, 
      team_first_score, team_second_score, is_publish, 
      publish_date, show_date_start, show_date_end, 
      status, sort_num, create_user, 
      create_date, update_user, update_date
      )
    values (#{contestType,jdbcType=VARCHAR}, #{contestName,jdbcType=VARCHAR}, #{contestDate,jdbcType=TIMESTAMP}, 
      #{teamFirst,jdbcType=VARCHAR}, #{teamFirstPic,jdbcType=VARCHAR}, #{teamSecond,jdbcType=VARCHAR}, 
      #{teamSecondPic,jdbcType=VARCHAR}, #{isHot,jdbcType=INTEGER}, #{isRecommend,jdbcType=INTEGER}, 
      #{teamFirstScore,jdbcType=INTEGER}, #{teamSecondScore,jdbcType=INTEGER}, #{isPublish,jdbcType=INTEGER}, 
      #{publishDate,jdbcType=TIMESTAMP}, #{showDateStart,jdbcType=TIMESTAMP}, #{showDateEnd,jdbcType=TIMESTAMP}, 
      #{status,jdbcType=INTEGER}, #{sortNum,jdbcType=INTEGER}, #{createUser,jdbcType=VARCHAR}, 
      #{createDate,jdbcType=TIMESTAMP}, #{updateUser,jdbcType=VARCHAR}, #{updateDate,jdbcType=TIMESTAMP}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.coin.entity.TContest">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_contest
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="contestType != null">
        contest_type,
      </if>
      <if test="contestName != null">
        contest_name,
      </if>
      <if test="contestDate != null">
        contest_date,
      </if>
      <if test="teamFirst != null">
        team_first,
      </if>
      <if test="teamFirstPic != null">
        team_first_pic,
      </if>
      <if test="teamSecond != null">
        team_second,
      </if>
      <if test="teamSecondPic != null">
        team_second_pic,
      </if>
      <if test="isHot != null">
        is_hot,
      </if>
      <if test="isRecommend != null">
        is_recommend,
      </if>
      <if test="teamFirstScore != null">
        team_first_score,
      </if>
      <if test="teamSecondScore != null">
        team_second_score,
      </if>
      <if test="isPublish != null">
        is_publish,
      </if>
      <if test="publishDate != null">
        publish_date,
      </if>
      <if test="showDateStart != null">
        show_date_start,
      </if>
      <if test="showDateEnd != null">
        show_date_end,
      </if>
      <if test="status != null">
        status,
      </if>
      <if test="sortNum != null">
        sort_num,
      </if>
      <if test="createUser != null">
        create_user,
      </if>
      <if test="createDate != null">
        create_date,
      </if>
      <if test="updateUser != null">
        update_user,
      </if>
      <if test="updateDate != null">
        update_date,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="contestType != null">
        #{contestType,jdbcType=VARCHAR},
      </if>
      <if test="contestName != null">
        #{contestName,jdbcType=VARCHAR},
      </if>
      <if test="contestDate != null">
        #{contestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="teamFirst != null">
        #{teamFirst,jdbcType=VARCHAR},
      </if>
      <if test="teamFirstPic != null">
        #{teamFirstPic,jdbcType=VARCHAR},
      </if>
      <if test="teamSecond != null">
        #{teamSecond,jdbcType=VARCHAR},
      </if>
      <if test="teamSecondPic != null">
        #{teamSecondPic,jdbcType=VARCHAR},
      </if>
      <if test="isHot != null">
        #{isHot,jdbcType=INTEGER},
      </if>
      <if test="isRecommend != null">
        #{isRecommend,jdbcType=INTEGER},
      </if>
      <if test="teamFirstScore != null">
        #{teamFirstScore,jdbcType=INTEGER},
      </if>
      <if test="teamSecondScore != null">
        #{teamSecondScore,jdbcType=INTEGER},
      </if>
      <if test="isPublish != null">
        #{isPublish,jdbcType=INTEGER},
      </if>
      <if test="publishDate != null">
        #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="showDateStart != null">
        #{showDateStart,jdbcType=TIMESTAMP},
      </if>
      <if test="showDateEnd != null">
        #{showDateEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        #{status,jdbcType=INTEGER},
      </if>
      <if test="sortNum != null">
        #{sortNum,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.coin.entity.TContestExample" resultType="java.lang.Long">
    select count(*) from t_contest
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update t_contest
    <set>
      <if test="row.id != null">
        id = #{row.id,jdbcType=INTEGER},
      </if>
      <if test="row.contestType != null">
        contest_type = #{row.contestType,jdbcType=VARCHAR},
      </if>
      <if test="row.contestName != null">
        contest_name = #{row.contestName,jdbcType=VARCHAR},
      </if>
      <if test="row.contestDate != null">
        contest_date = #{row.contestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.teamFirst != null">
        team_first = #{row.teamFirst,jdbcType=VARCHAR},
      </if>
      <if test="row.teamFirstPic != null">
        team_first_pic = #{row.teamFirstPic,jdbcType=VARCHAR},
      </if>
      <if test="row.teamSecond != null">
        team_second = #{row.teamSecond,jdbcType=VARCHAR},
      </if>
      <if test="row.teamSecondPic != null">
        team_second_pic = #{row.teamSecondPic,jdbcType=VARCHAR},
      </if>
      <if test="row.isHot != null">
        is_hot = #{row.isHot,jdbcType=INTEGER},
      </if>
      <if test="row.isRecommend != null">
        is_recommend = #{row.isRecommend,jdbcType=INTEGER},
      </if>
      <if test="row.teamFirstScore != null">
        team_first_score = #{row.teamFirstScore,jdbcType=INTEGER},
      </if>
      <if test="row.teamSecondScore != null">
        team_second_score = #{row.teamSecondScore,jdbcType=INTEGER},
      </if>
      <if test="row.isPublish != null">
        is_publish = #{row.isPublish,jdbcType=INTEGER},
      </if>
      <if test="row.publishDate != null">
        publish_date = #{row.publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.showDateStart != null">
        show_date_start = #{row.showDateStart,jdbcType=TIMESTAMP},
      </if>
      <if test="row.showDateEnd != null">
        show_date_end = #{row.showDateEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="row.status != null">
        status = #{row.status,jdbcType=INTEGER},
      </if>
      <if test="row.sortNum != null">
        sort_num = #{row.sortNum,jdbcType=INTEGER},
      </if>
      <if test="row.createUser != null">
        create_user = #{row.createUser,jdbcType=VARCHAR},
      </if>
      <if test="row.createDate != null">
        create_date = #{row.createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="row.updateUser != null">
        update_user = #{row.updateUser,jdbcType=VARCHAR},
      </if>
      <if test="row.updateDate != null">
        update_date = #{row.updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update t_contest
    set id = #{row.id,jdbcType=INTEGER},
      contest_type = #{row.contestType,jdbcType=VARCHAR},
      contest_name = #{row.contestName,jdbcType=VARCHAR},
      contest_date = #{row.contestDate,jdbcType=TIMESTAMP},
      team_first = #{row.teamFirst,jdbcType=VARCHAR},
      team_first_pic = #{row.teamFirstPic,jdbcType=VARCHAR},
      team_second = #{row.teamSecond,jdbcType=VARCHAR},
      team_second_pic = #{row.teamSecondPic,jdbcType=VARCHAR},
      is_hot = #{row.isHot,jdbcType=INTEGER},
      is_recommend = #{row.isRecommend,jdbcType=INTEGER},
      team_first_score = #{row.teamFirstScore,jdbcType=INTEGER},
      team_second_score = #{row.teamSecondScore,jdbcType=INTEGER},
      is_publish = #{row.isPublish,jdbcType=INTEGER},
      publish_date = #{row.publishDate,jdbcType=TIMESTAMP},
      show_date_start = #{row.showDateStart,jdbcType=TIMESTAMP},
      show_date_end = #{row.showDateEnd,jdbcType=TIMESTAMP},
      status = #{row.status,jdbcType=INTEGER},
      sort_num = #{row.sortNum,jdbcType=INTEGER},
      create_user = #{row.createUser,jdbcType=VARCHAR},
      create_date = #{row.createDate,jdbcType=TIMESTAMP},
      update_user = #{row.updateUser,jdbcType=VARCHAR},
      update_date = #{row.updateDate,jdbcType=TIMESTAMP}
    <if test="example != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.coin.entity.TContest">
    update t_contest
    <set>
      <if test="contestType != null">
        contest_type = #{contestType,jdbcType=VARCHAR},
      </if>
      <if test="contestName != null">
        contest_name = #{contestName,jdbcType=VARCHAR},
      </if>
      <if test="contestDate != null">
        contest_date = #{contestDate,jdbcType=TIMESTAMP},
      </if>
      <if test="teamFirst != null">
        team_first = #{teamFirst,jdbcType=VARCHAR},
      </if>
      <if test="teamFirstPic != null">
        team_first_pic = #{teamFirstPic,jdbcType=VARCHAR},
      </if>
      <if test="teamSecond != null">
        team_second = #{teamSecond,jdbcType=VARCHAR},
      </if>
      <if test="teamSecondPic != null">
        team_second_pic = #{teamSecondPic,jdbcType=VARCHAR},
      </if>
      <if test="isHot != null">
        is_hot = #{isHot,jdbcType=INTEGER},
      </if>
      <if test="isRecommend != null">
        is_recommend = #{isRecommend,jdbcType=INTEGER},
      </if>
      <if test="teamFirstScore != null">
        team_first_score = #{teamFirstScore,jdbcType=INTEGER},
      </if>
      <if test="teamSecondScore != null">
        team_second_score = #{teamSecondScore,jdbcType=INTEGER},
      </if>
      <if test="isPublish != null">
        is_publish = #{isPublish,jdbcType=INTEGER},
      </if>
      <if test="publishDate != null">
        publish_date = #{publishDate,jdbcType=TIMESTAMP},
      </if>
      <if test="showDateStart != null">
        show_date_start = #{showDateStart,jdbcType=TIMESTAMP},
      </if>
      <if test="showDateEnd != null">
        show_date_end = #{showDateEnd,jdbcType=TIMESTAMP},
      </if>
      <if test="status != null">
        status = #{status,jdbcType=INTEGER},
      </if>
      <if test="sortNum != null">
        sort_num = #{sortNum,jdbcType=INTEGER},
      </if>
      <if test="createUser != null">
        create_user = #{createUser,jdbcType=VARCHAR},
      </if>
      <if test="createDate != null">
        create_date = #{createDate,jdbcType=TIMESTAMP},
      </if>
      <if test="updateUser != null">
        update_user = #{updateUser,jdbcType=VARCHAR},
      </if>
      <if test="updateDate != null">
        update_date = #{updateDate,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.coin.entity.TContest">
    update t_contest
    set contest_type = #{contestType,jdbcType=VARCHAR},
      contest_name = #{contestName,jdbcType=VARCHAR},
      contest_date = #{contestDate,jdbcType=TIMESTAMP},
      team_first = #{teamFirst,jdbcType=VARCHAR},
      team_first_pic = #{teamFirstPic,jdbcType=VARCHAR},
      team_second = #{teamSecond,jdbcType=VARCHAR},
      team_second_pic = #{teamSecondPic,jdbcType=VARCHAR},
      is_hot = #{isHot,jdbcType=INTEGER},
      is_recommend = #{isRecommend,jdbcType=INTEGER},
      team_first_score = #{teamFirstScore,jdbcType=INTEGER},
      team_second_score = #{teamSecondScore,jdbcType=INTEGER},
      is_publish = #{isPublish,jdbcType=INTEGER},
      publish_date = #{publishDate,jdbcType=TIMESTAMP},
      show_date_start = #{showDateStart,jdbcType=TIMESTAMP},
      show_date_end = #{showDateEnd,jdbcType=TIMESTAMP},
      status = #{status,jdbcType=INTEGER},
      sort_num = #{sortNum,jdbcType=INTEGER},
      create_user = #{createUser,jdbcType=VARCHAR},
      create_date = #{createDate,jdbcType=TIMESTAMP},
      update_user = #{updateUser,jdbcType=VARCHAR},
      update_date = #{updateDate,jdbcType=TIMESTAMP}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>